diff -r 3990b7d564d7 src/core/android/SDL_android.cpp
--- a/src/core/android/SDL_android.cpp	Sun Jul 22 21:47:56 2012 +0200
+++ b/src/core/android/SDL_android.cpp	Fri Aug 17 17:05:57 2012 +0200
@@ -482,6 +482,10 @@
     jclass channels;
     jobject readableByteChannel;
     jstring fileNameJString;
+    char *cFileName;
+    jobject resources;
+    jint resourceId;
+    bool isResourceUri;
 
     JNIEnv *mEnv = Android_JNI_GetEnv();
     if (!refs.init(mEnv)) {
@@ -490,20 +494,43 @@
 
     fileNameJString = (jstring)ctx->hidden.androidio.fileNameRef;
 
+    // check if it's resource uri
+    cFileName = (char *)mEnv->GetStringUTFChars(fileNameJString, 0);
+    isResourceUri = (SDL_strchr(cFileName, ':') != 0);
+    mEnv->ReleaseStringUTFChars(fileNameJString, cFileName);
+
     // context = SDLActivity.getContext();
     mid = mEnv->GetStaticMethodID(mActivityClass,
             "getContext","()Landroid/content/Context;");
     context = mEnv->CallStaticObjectMethod(mActivityClass, mid);
 
-    // assetManager = context.getAssets();
-    mid = mEnv->GetMethodID(mEnv->GetObjectClass(context),
-            "getAssets", "()Landroid/content/res/AssetManager;");
-    assetManager = mEnv->CallObjectMethod(context, mid);
+    if (!isResourceUri) {
+        // assetManager = context.getAssets();
+        mid = mEnv->GetMethodID(mEnv->GetObjectClass(context),
+                                "getAssets", "()Landroid/content/res/AssetManager;");
+        assetManager = mEnv->CallObjectMethod(context, mid);
 
-    // inputStream = assetManager.open(<filename>);
-    mid = mEnv->GetMethodID(mEnv->GetObjectClass(assetManager),
-            "open", "(Ljava/lang/String;)Ljava/io/InputStream;");
-    inputStream = mEnv->CallObjectMethod(assetManager, mid, fileNameJString);
+        // inputStream = assetManager.open(<filename>);
+        mid = mEnv->GetMethodID(mEnv->GetObjectClass(assetManager),
+                                "open", "(Ljava/lang/String;)Ljava/io/InputStream;");
+        inputStream = mEnv->CallObjectMethod(assetManager, mid, fileNameJString);
+    } else {
+        // resources = context.getResources();
+        mid = mEnv->GetMethodID(mEnv->GetObjectClass(context),
+                                "getResources", "()Landroid/content/res/Resources;");
+        resources = mEnv->CallObjectMethod(context, mid);
+
+        // resourceId = resources.getIdentifier(<filename>);
+        mid = mEnv->GetMethodID(mEnv->GetObjectClass(resources),
+                                "getIdentifier", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I");
+        resourceId = mEnv->CallIntMethod(resources, mid, fileNameJString, 0, 0);
+
+        // inputStream = resources.openRawResource(<id>);
+        mid = mEnv->GetMethodID(mEnv->GetObjectClass(resources),
+                                "openRawResource", "(I)Ljava/io/InputStream;");
+        inputStream = mEnv->CallObjectMethod(resources, mid, resourceId);
+    }
+
     if (Android_JNI_ExceptionOccurred()) {
         goto failure;
     }
